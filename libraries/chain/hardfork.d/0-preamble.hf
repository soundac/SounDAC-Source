/*****************************************
 *                                       *
 * This file is automatically generated. *
 * To create new hardfork, please modify *
 * the .hf files in hardfork.d instead   *
 * of modifying this file.               *
 *                                       *
 *****************************************/

#pragma once

#include <muse/chain/protocol/types.hpp>
#include <muse/chain/protocol/version.hpp>

namespace muse { namespace chain {

class hardfork_property_object : public abstract_object< hardfork_property_object >
{
   public:
      static const uint8_t space_id = implementation_ids;
      static const uint8_t type_id  = impl_hardfork_property_object_type;

      vector< fc::time_point_sec > processed_hardforks;
      unsigned int                 last_hardfork = 0;
      hardfork_version             current_hardfork_version;
      hardfork_version             next_hardfork;
      fc::time_point_sec           next_hardfork_time;
};

} } // namespace muse::chain

FC_REFLECT_DERIVED( muse::chain::hardfork_property_object, (graphene::db::object),
   (processed_hardforks)(last_hardfork)(current_hardfork_version)
   (next_hardfork)(next_hardfork_time) )

#define MUSE_NUM_HARDFORKS 6

